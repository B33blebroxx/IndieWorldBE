// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IndieWorld.Migrations
{
    [DbContext(typeof(IndieWorldDbContext))]
    [Migration("20240520185749_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IndieWorld.Models.Performer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Accolades")
                        .HasColumnType("text");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<string>("Hometown")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("RingName")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Performers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Accolades = "GCW World Champion",
                            Active = true,
                            Bio = "Nick Gage is a hardcore wrestling legend and the 'God of Ultraviolence'.",
                            Hometown = "Philadelphia, PA",
                            ImageUrl = "https://static.tvtropes.org/pmwiki/pub/images/nickgage_8.jpg",
                            RingName = "Nick Gage",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Accolades = "Effy's Big Gay Brunch founder",
                            Active = true,
                            Bio = "Effy is known for his flamboyant style and strong LGBTQ+ representation in wrestling.",
                            Hometown = "Atlanta, GA",
                            ImageUrl = "https://static.wikia.nocookie.net/prowrestling/images/4/49/Effy-new-render.jpg/revision/latest?cb=20200513165511",
                            RingName = "Effy",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            Accolades = "IWTV Independent Wrestling Champion",
                            Active = true,
                            Bio = "Warhorse rules ass and is known for his high-energy performances and headbanging entrance.",
                            Hometown = "St. Louis, MO",
                            ImageUrl = "https://geordiegrapples.wordpress.com/wp-content/uploads/2020/07/9x22sid00aa41-1.jpg?w=819",
                            RingName = "Warhorse",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 4,
                            Accolades = "Featured in multiple intergender matches",
                            Active = true,
                            Bio = "Allie Katch is a unique and charismatic performer with a love for cats and wrestling.",
                            Hometown = "Austin, TX",
                            ImageUrl = "https://pbs.twimg.com/media/GNpgIsqWMAAVsEE?format=jpg&name=large",
                            RingName = "Allie Katch",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 5,
                            Accolades = "ROH contract and numerous indie titles",
                            Active = true,
                            Bio = "Danhausen is very nice, very evil, and known for his comedic and spooky character.",
                            Hometown = "Somewhere Evil",
                            ImageUrl = "https://www.theledger.com/gcdn/authoring/2020/03/25/NLED/ghows-LK-1a0f2d17-5797-4fe2-b681-16602adb5422-268ea47f.jpeg",
                            RingName = "Danhausen",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 6,
                            Accolades = "Chikara senior official",
                            Active = true,
                            Bio = "Bryce Remsburg is a highly respected referee known for his work in various indie promotions as well as AEW.",
                            Hometown = "West Chester, PA",
                            ImageUrl = "https://pbs.twimg.com/profile_images/1556345586613354498/n1h5JQ9n_400x400.jpg",
                            RingName = "Bryce Remsburg",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 7,
                            Accolades = "Founder of SHIMMER Women Athletes",
                            Active = true,
                            Bio = "Dave Prazak is a veteran commentator and manager, known for his work with SHIMMER and ROH.",
                            Hometown = "Chicago, IL",
                            ImageUrl = "https://pbs.twimg.com/profile_images/1554102464869277697/xhyyhGjA_400x400.jpg",
                            RingName = "Dave Prazak",
                            RoleId = 8
                        },
                        new
                        {
                            Id = 8,
                            Accolades = "Voice of Evolve Wrestling",
                            Active = true,
                            Bio = "Lenny Leonard is a seasoned commentator known for his work in SHIMMER, ROH and Evolve.",
                            Hometown = "New York, NY",
                            ImageUrl = "https://pbs.twimg.com/media/DywpLT-UwAA0Cm8.jpg",
                            RingName = "Lenny Leonard",
                            RoleId = 5
                        },
                        new
                        {
                            Id = 9,
                            Accolades = "Commentator for AEW and indie promotions",
                            Active = true,
                            Bio = "Veda Scott is a talented wrestler and commentator, known for her sharp insights and in-ring skills.",
                            Hometown = "Providence, RI",
                            ImageUrl = "https://pbs.twimg.com/profile_images/1664115414899539968/mcHJNsIt_400x400.jpg",
                            RingName = "Veda Scott",
                            RoleId = 6
                        },
                        new
                        {
                            Id = 10,
                            Accolades = "First female referee in AEW",
                            Active = true,
                            Bio = "Aubrey Edwards is a prominent referee known for her work in AEW and on the indie circuit.",
                            Hometown = "Seattle, WA",
                            ImageUrl = "https://www.gerweck.net/wp-content/uploads/2018/12/Referee-Aubrey-Edwards-122618.jpg",
                            RingName = "Aubrey Edwards",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 11,
                            Accolades = "Voice of GCW",
                            Active = true,
                            Bio = "Kevin Gill is a well-known commentator and announcer in the indie wrestling scene.",
                            Hometown = "San Francisco, CA",
                            ImageUrl = "https://pbs.twimg.com/profile_images/1474605422065569802/fSKh_XWy_400x400.jpg",
                            RingName = "Kevin Gill",
                            RoleId = 7
                        },
                        new
                        {
                            Id = 12,
                            Accolades = "Refereed WrestleMania 25 main event",
                            Active = true,
                            Bio = "Marty Elias is a well-known referee with experience in WWE, AAA, and Lucha Underground.",
                            Hometown = "Los Angeles, CA",
                            ImageUrl = "https://staticg.sportskeeda.com/editor/2021/10/79b9d-16348538759381-1920.jpg",
                            RingName = "Marty Elias",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 13,
                            Accolades = "Co-founder of PWG",
                            Active = true,
                            Bio = "Excalibur is a prominent commentator known for his work in PWG and AEW.",
                            Hometown = "Los Angeles, CA",
                            ImageUrl = "https://upload.wikimedia.org/wikipedia/commons/5/58/Excalibur%2C_May_2023_%28headshot%29.jpg",
                            RingName = "Excalibur",
                            RoleId = 7
                        },
                        new
                        {
                            Id = 14,
                            Accolades = "GCW World Champion",
                            Active = true,
                            Bio = "Tony Deppen is a versatile and skilled wrestler, known for his work in GCW and ROH.",
                            Hometown = "Hershey, PA",
                            ImageUrl = "https://i1.sndcdn.com/artworks-QUHLSyQ2Mu3ofuB2-eJZDdQ-t500x500.jpg",
                            RingName = "Tony Deppen",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 15,
                            Accolades = "MLW and GCW star",
                            Active = true,
                            Bio = "Mance Warner is a charismatic brawler known for his southern drawl and hardcore matches.",
                            Hometown = "Buckland, GA",
                            ImageUrl = "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcShB8oTStzu84nJURYO3UpaRsyZHOrOKxQLW-zWdEfIcEb5uXAP",
                            RingName = "Mance Warner",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 16,
                            Accolades = "GCW World Champion, NWA Worlds Heavyweight Champion, INDIE GOD, Deathmatch King",
                            Active = true,
                            Bio = "Matt Cardona, formerly known as Zack Ryder in WWE, has reinvented himself on the indie scene.",
                            Hometown = "Long Island, NY",
                            ImageUrl = "https://mattcardona.com/wp-content/uploads/2020/08/bio-pic-matt-cardona-2-683x1024.jpg",
                            RingName = "Matt Cardona",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("IndieWorld.Models.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Acronym")
                        .HasColumnType("text");

                    b.Property<int>("Established")
                        .HasColumnType("integer");

                    b.Property<string>("Hq")
                        .HasColumnType("text");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("text");

                    b.Property<string>("Owner")
                        .HasColumnType("text");

                    b.Property<string>("PromotionName")
                        .HasColumnType("text");

                    b.Property<string>("ShowFrequency")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Promotions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Acronym = "OCW",
                            Established = 2020,
                            Hq = "Nashville, TN",
                            LogoUrl = "https://c8.alamy.com/comp/2RGT030/ocw-letter-logo-design-with-polygon-shape-ocw-polygon-and-cube-shape-logo-design-ocw-hexagon-vector-logo-template-white-and-black-colors-ocw-monogr-2RGT030.jpg",
                            Owner = "Jeremy Lee",
                            PromotionName = "Off Center Wrestling",
                            ShowFrequency = "Twice Monthly"
                        },
                        new
                        {
                            Id = 2,
                            Acronym = "GCW",
                            Established = 1999,
                            Hq = "New Jersey",
                            LogoUrl = "https://upload.wikimedia.org/wikipedia/commons/c/cc/Game_Changer_Wrestling_Logo_%28black%29.png",
                            Owner = "Brett Lauderdale",
                            PromotionName = "Game Changer Wrestling",
                            ShowFrequency = "Twice Monthly"
                        },
                        new
                        {
                            Id = 3,
                            Acronym = "CZW",
                            Established = 1999,
                            Hq = "Philadelphia, PA",
                            LogoUrl = "https://static.iwtv.live/media/promotions/January2018/ebQhMN1hKqz1WHsVaDX5-medium.jpg",
                            Owner = "D.J. Hyde",
                            PromotionName = "Combat Zone Wrestling",
                            ShowFrequency = "Weekly"
                        },
                        new
                        {
                            Id = 4,
                            Acronym = "PWG",
                            Established = 2003,
                            Hq = "Los Angeles, CA",
                            LogoUrl = "https://mir-s3-cdn-cf.behance.net/projects/404/9beb1335792767.Y3JvcCwxNTM0LDEyMDEsNjUsMA.jpg",
                            Owner = "Excalibur, Super Dragon",
                            PromotionName = "Pro Wrestling Guerilla",
                            ShowFrequency = "On Hiatus"
                        },
                        new
                        {
                            Id = 5,
                            Acronym = "Beyond",
                            Established = 2009,
                            Hq = "Worcester, MA",
                            LogoUrl = "https://upload.wikimedia.org/wikipedia/commons/8/80/Beyond_Wrestling%2C_2016_logo.jpg",
                            Owner = "Drew Cordeiro",
                            PromotionName = "Beyond Wrestling",
                            ShowFrequency = "Weekly"
                        });
                });

            modelBuilder.Entity("IndieWorld.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Wrestler"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Referee"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Announcer"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Commentator"
                        },
                        new
                        {
                            Id = 6,
                            Title = "Wrestler/Commentator"
                        },
                        new
                        {
                            Id = 7,
                            Title = "Announcer/Commentator"
                        },
                        new
                        {
                            Id = 8,
                            Title = "Manager/Commentator"
                        });
                });

            modelBuilder.Entity("IndieWorld.Models.Show", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<int>("PromotionId")
                        .HasColumnType("integer");

                    b.Property<bool>("ShowComplete")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ShowDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ShowImage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShowTime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PromotionId");

                    b.ToTable("Shows");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = "Nashville Fairgrounds",
                            Price = 20,
                            PromotionId = 1,
                            ShowComplete = false,
                            ShowDate = new DateTime(2024, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShowImage = "https://files.oaiusercontent.com/file-Ecwv7KweFiuyIPjbG7QZsIl3?se=2024-05-18T19%3A07%3A17Z&sp=r&sv=2023-11-03&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dc293fe61-8325-453a-aee0-4ab9439989a9.webp&sig=yIUyw7zHrPX0PysbOaUaDMm%2BHVPZ%2BY5oJLQa3bS3C60%3D",
                            ShowName = "Off Center Deluxe",
                            ShowTime = "Doors @ 5pm, Bell @ 6pm"
                        },
                        new
                        {
                            Id = 2,
                            Location = "Nashville Fairgrounds",
                            Price = 20,
                            PromotionId = 1,
                            ShowComplete = false,
                            ShowDate = new DateTime(2024, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShowImage = "https://files.oaiusercontent.com/file-moVE8QL9KdbmUcCf4CI5qGfo?se=2024-05-19T19%3A32%3A30Z&sp=r&sv=2023-11-03&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dddaad71a-fffd-4821-a620-308817c97273.webp&sig=5zcCKPe9QXRoZTQZBz%2BA227iEMmcoXbPFebc5%2BUr43o%3D",
                            ShowName = "Off Center Bullseye Bash",
                            ShowTime = "Doors @ 5pm, Bell @ 6pm"
                        },
                        new
                        {
                            Id = 3,
                            Location = "Gilleys Dallas",
                            Price = 45,
                            PromotionId = 2,
                            ShowComplete = false,
                            ShowDate = new DateTime(2024, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShowImage = "https://img.evbuc.com/https%3A%2F%2Fcdn.evbuc.com%2Fimages%2F756527009%2F216774150960%2F1%2Foriginal.20240501-021730?w=940&auto=format%2Ccompress&q=75&sharp=10&rect=0%2C30%2C1080%2C540&s=6c1cb0b2776e10b90ed0c94e0c56d924",
                            ShowName = "GCW: Crime Wave",
                            ShowTime = "Doors @ 7pm, Bell @ 8pm"
                        },
                        new
                        {
                            Id = 4,
                            Location = "Ukrainian Cultural Center",
                            Price = 45,
                            PromotionId = 2,
                            ShowComplete = false,
                            ShowDate = new DateTime(2024, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShowImage = "https://img.evbuc.com/https%3A%2F%2Fcdn.evbuc.com%2Fimages%2F752697599%2F216774150960%2F1%2Foriginal.20240425-220612?w=940&auto=format%2Ccompress&q=75&sharp=10&rect=0%2C31%2C1079%2C540&s=adc0954253f42cf46e49aee38b1b87ca",
                            ShowName = "GCW Presents: Hit Em Up",
                            ShowTime = "Doors @ 7pm, Bell @ 8pm"
                        },
                        new
                        {
                            Id = 5,
                            Location = "323 St. John Street, Havre De Grace, MD",
                            Price = 35,
                            PromotionId = 3,
                            ShowComplete = false,
                            ShowDate = new DateTime(2024, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShowImage = "https://static.iwtv.live/media/streams/May2024/MeoQ9r0aYW45VCxwpSkv.png",
                            ShowName = "CZW: Limelight 26",
                            ShowTime = "Doors @ 3pm, Bell @ 4pm"
                        },
                        new
                        {
                            Id = 6,
                            Location = " 34 Market Place, Baltimore MD",
                            Price = 35,
                            PromotionId = 3,
                            ShowComplete = false,
                            ShowDate = new DateTime(2024, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShowImage = "https://static.iwtv.live/media/events/April2024/ydGXPZ47kTcc2MOkC2Me-medium-new.jpg",
                            ShowName = "CZW: Don't Blink",
                            ShowTime = "Doors @ 3pm, Bell @ 4pm"
                        },
                        new
                        {
                            Id = 7,
                            Location = " 34 Market Place, Baltimore MD",
                            Price = 35,
                            PromotionId = 3,
                            ShowComplete = false,
                            ShowDate = new DateTime(2024, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShowImage = "https://www.czwrestling.com/images/BestOfTheBestXX/MylesHawkinsVsShaunSmithVsDeseanPratt.jpg",
                            ShowName = "CZW: Best of the Best XX",
                            ShowTime = "Doors @ 3pm, Bell @ 4pm"
                        },
                        new
                        {
                            Id = 8,
                            Location = " White Eagle - 116-120 Green St, Worcester, MA",
                            Price = 40,
                            PromotionId = 5,
                            ShowComplete = false,
                            ShowDate = new DateTime(2024, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShowImage = "https://static.iwtv.live/media/events/January2024/vwrFew7m6Kc7IhxFj5e5-medium.jpg",
                            ShowName = "Beyond: Lights...Camera...Wrestling",
                            ShowTime = "Doors @ 7:30pm, Bell @ 8pm"
                        });
                });

            modelBuilder.Entity("IndieWorld.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PerformerId")
                        .HasColumnType("integer");

                    b.Property<int>("PromotionId")
                        .HasColumnType("integer");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PerformerId = 1,
                            PromotionId = 1,
                            Uid = "sXjgfJgbh3fAnWeprjQi9MMK9HO2"
                        });
                });

            modelBuilder.Entity("PerformerShow", b =>
                {
                    b.Property<int>("PerformersId")
                        .HasColumnType("integer");

                    b.Property<int>("ShowsId")
                        .HasColumnType("integer");

                    b.HasKey("PerformersId", "ShowsId");

                    b.HasIndex("ShowsId");

                    b.ToTable("PerformerShow");
                });

            modelBuilder.Entity("IndieWorld.Models.Performer", b =>
                {
                    b.HasOne("IndieWorld.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("IndieWorld.Models.Show", b =>
                {
                    b.HasOne("IndieWorld.Models.Promotion", "Promotion")
                        .WithMany()
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("PerformerShow", b =>
                {
                    b.HasOne("IndieWorld.Models.Performer", null)
                        .WithMany()
                        .HasForeignKey("PerformersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndieWorld.Models.Show", null)
                        .WithMany()
                        .HasForeignKey("ShowsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
